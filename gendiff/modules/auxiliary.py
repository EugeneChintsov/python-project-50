# скрипт(gendiff_.py) пошагово:
#
# 1) (cli.greet)
#   - принимает строку 
#   - парсит строку (argparse)
#   - возвращает namespace содержащий: 1) строка с именем 1-го файла
#                                      2) строка с именем 2-го файла
#                                      3) строка с значением ключа фрмата 
#
# 2) основная функция(main.generate_diff)
#       - принимает:
#           1) строка с именем 1-го файла
#           2) строка с именем 2-го файла
#           3) строка с значением ключа формата вывода
#              (dict_to_json по умолчанию) 
#  
#       - считaть данные из файлов (сохранить в словари)
#       - получить разницу (сохранить в словарь) (может быть вынести в отдельную функцию auxiliary.get_diff)
#       - применить форматирование (auxiliary.parse)
#         к словарю с разницей в соответствии с ключом фомата вывода
#         (converters.dict_to_json по умолчанию)
#        - вернуть результат строку
# 3) скрипт выводит на экран результат строку




# cli.greet
#   принимает строку
#   возвращает namespace, содержащий 3 строки (2 пути до файлов, ключ выбора формата для сериализатора) 
#
# 
#  auxiliary.parse
#   - принимает namespace
#   - берет из namespace строку с путем до файла  
#   - проверяет тип файла
#   - исходя из типа файлов выбирает и применяет функцию перевода в словарь
#
# converters.py 
#   functions:  1)json_to_dict, yaml_to_dict, specific_to_dict 
#               2)dict_to_json, dict_to_yaml, specific_to_dict
#       
#
# main.generate_diff
#   - принимает 2 словаря
#   - сравнивает по ключам,
#   - добавляет маркер + обработанный элемент(с учетом вложенности)
#     в словарь-разницу
#   - возвращает словарь-разницу
# 
# 
# auxiliary.format
#   - принимает словарь разницу, namespace.ключ_формата
#   - исходя из значения ключа выбирает и применяет функцию конвертирования
#       (converters.py)
#   - возвращает строку в формате заданном по ключу 
#
#
